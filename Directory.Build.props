<Project>
  <PropertyGroup>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>11.0</LangVersion>
    <Nullable>enable</Nullable>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>

    <!--
      Enable the latest warning wave, which shows additional warnings for invalid language features that are disabled by default.
      For additional info, see https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/warning-waves.
    -->
    <AnalysisLevel>7</AnalysisLevel>

    <!--
      Enable the compiler strict mode (see https://www.meziantou.net/csharp-compiler-strict-mode.htm).
      This (poorly documented) mode enables additional warnings for incorrect usages of some features.
      For instance, this will warn when using the == operator to compare a struct with a null literal.
    -->
    <Features>strict</Features>

    <!--
      Suppress ref safety warnings in unsafe contexts (see https://github.com/dotnet/csharplang/issues/6476).
      This is used eg. to replace Unsafe.SizeOf<T>() calls with just sizeof(T). The warning is not necessary
      since in order to use these APIs the caller already has to be in an unsafe context.
    -->
    <NoWarn>$(NoWarn);CS8500</NoWarn>
  </PropertyGroup>
</Project>