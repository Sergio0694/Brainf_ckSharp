<UserControl
    x:Class="Brainf_ck_sharp_UWP.UserControls.Shell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Brainf_ck_sharp_UWP.UserControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:virtualKeyboard="using:Brainf_ck_sharp_UWP.UserControls.VirtualKeyboard"
    xmlns:header="using:Brainf_ck_sharp_UWP.UserControls.Header"
    xmlns:views="using:Brainf_ck_sharp_UWP.Views"
    xmlns:stdinHeader="using:Brainf_ck_sharp_UWP.UserControls.VirtualKeyboard.StdinHeader"
    xmlns:telerik="using:Telerik.UI.Xaml.Controls.Primitives"
    xmlns:inheritedControls="using:Brainf_ck_sharp_UWP.UserControls.InheritedControls"
    xmlns:controls="using:Brainf_ck_sharp_UWP.UserControls.VirtualKeyboard.Controls"
    xmlns:customCommandBar="using:Brainf_ck_sharp_UWP.UserControls.InheritedControls.CustomCommandBar"
    xmlns:converters="using:Brainf_ck_sharp_UWP.Converters"
    mc:Ignorable="d"
    d:DesignHeight="600"
    d:DesignWidth="400">
    <UserControl.Resources>
        
        <!--Converters-->
        <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter"/>
    </UserControl.Resources>

    <RelativePanel>
        
        <!--Fade canvas-->
        <Canvas 
            Background="#80000000"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignTopWithPanel="True"
            RelativePanel.AlignBottomWithPanel="True"
            Canvas.ZIndex="2"
            IsHitTestVisible="False"
            x:Name="FadeCanvas"
            d:IsHidden="True"/>
        
        <!--UI header-->
        <Grid
            Canvas.ZIndex="1"
            x:Name="HeaderGrid"
            RelativePanel.AlignTopWithPanel="True"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!--Title placeholder-->
            <Grid 
                Grid.Row="0"
                Height="32"
                x:Name="TitlePlaceholder"
                Visibility="Collapsed">
                
                <!--App title-->
                <TextBlock
                    Foreground="White"
                    Text="Brainf*ck#"
                    FontSize="12"
                    FontWeight="SemiLight"
                    Margin="12,0,0,0"
                    VerticalAlignment="Center"/>
            </Grid>
            
            <!--Header with pivot buttons-->
            <header:HeaderControl
                Grid.Row="1"
                SelectedHeaderIndex="{x:Bind PivotControl.SelectedIndex, Mode=TwoWay}"/>
        </Grid>
        
        <!--Console and IDE-->
        <Pivot
            x:Name="PivotControl"
            RelativePanel.AlignTopWithPanel="True"
            RelativePanel.Above="OperatorsKeyboard"
            Style="{StaticResource PivotCustomStyle}"
            SelectionChanged="PivotControl_OnSelectionChanged">
            
            <!--Console-->
            <PivotItem Margin="8,0,0,0">
                <views:ConsoleView x:Name="Console"/>
            </PivotItem>
            
            <!--IDE-->
            <PivotItem Margin="0">
                <views:IDEView x:Name="IDE"/>
            </PivotItem>
        </Pivot>

        <!--Commands prompt-->
        <Grid
            x:Name="OperatorsKeyboard"
            RelativePanel.Above="SharedCommandBar"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            Background="{StaticResource KeyboardBrush}">

            <!--Expandable keyboard pivot-->
            <inheritedControls:FixedRadExpanderControl
                Margin="0"
                IsExpandable="True"
                IsExpanded="True"
                ExpanderHitTargetAreaWidth="48"
                AnimatedIndicatorContent="&#xE010;"
                x:Name="ExpanderControl">
                <telerik:RadExpanderControl.AnimatedIndicatorContentTemplate>
                    <DataTemplate>
                        <Button 
                            Style="{StaticResource WideButtonWithNoBackgroundAndBorderStyle}"
                            Width="48"
                            x:Name="ExpanderStateButton">
                            <Button.Clip>
                                <RectangleGeometry Rect="0,0,48,48"/>
                            </Button.Clip>
                            <TextBlock 
                                Text="{Binding}"
                                Style="{StaticResource FontIconTextBlockStyle}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"/>
                        </Button>
                    </DataTemplate>
                </telerik:RadExpanderControl.AnimatedIndicatorContentTemplate>
                <telerik:RadExpanderControl.Content>

                    <!--Header-->
                    <Grid Height="48">

                        <!--Wide light border-->
                        <Border
                            Width="48"
                            HorizontalAlignment="Right"
                            x:Name="BackgroundBorder"
                            Background="{StaticResource ElementsWideLightBrush}"
                            Opacity="0">
                            <Border.RenderTransform>
                                <TranslateTransform X="48"/>
                            </Border.RenderTransform>
                        </Border>

                        <!--Expander light-->
                        <Border
                            x:Name="ExpanderLightBorder"
                            Width="48"
                            HorizontalAlignment="Right"
                            BorderThickness="1"
                            BorderBrush="{StaticResource BorderLightBrush}">
                            <Border.RenderTransform>
                                <TranslateTransform X="48"/>
                            </Border.RenderTransform>
                        </Border>

                        <!--Overlay for the expander-->
                        <Rectangle
                            Fill="{ThemeResource ShellSeparatorLineFillBrush}"
                            VerticalAlignment="Top"
                            Canvas.ZIndex="1"
                            Height="1"
                            Width="48"
                            HorizontalAlignment="Right">
                            <Rectangle.RenderTransform>
                                <TranslateTransform X="48"/>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        
                        <!--Stdin and pivot headers-->
                        <Canvas 
                            Grid.Row="0"
                            Background="#40000000"/>
                        <stdinHeader:KeyboardHeaderControl 
                            x:Name="StdinHeader"
                            Grid.Row="0"
                            SelectedHeaderIndex="{x:Bind CommandsPivot.SelectedIndex, Mode=TwoWay}"/>
                    </Grid>
                </telerik:RadExpanderControl.Content>
                <telerik:RadExpanderControl.ExpandableContent>
                    <inheritedControls:LockedPivot
                        Style="{StaticResource PivotCustomStyle}"
                        x:Name="CommandsPivot"
                        Height="180">

                        <!--Keyboard UI-->
                        <PivotItem Margin="0">
                            <virtualKeyboard:VirtualKeyboardControl/>
                        </PivotItem>

                        <!--Memory view-->
                        <PivotItem 
                            Margin="0"
                            Background="#20000000">
                            <Grid Margin="12,0,0,0">
                                <controls:CompactCharactersViewerControl/>
                            </Grid>
                        </PivotItem>
                    </inheritedControls:LockedPivot>
                </telerik:RadExpanderControl.ExpandableContent>
            </inheritedControls:FixedRadExpanderControl>
        </Grid>

        <!--Command bar-->
        <customCommandBar:CommandBarWithButtonsAnimations
            x:Name="SharedCommandBar"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.Above="InfoBar"
            Style="{StaticResource ScrollableCommandBarStyle}"
            CommandBarOverflowPresenterStyle="{StaticResource AcrylicCommandBarOverflowPresenter}">
            <customCommandBar:CommandBarWithButtonsAnimations.PrimaryCommands>
                
                <!--Console buttons-->
                <customCommandBar:CustomCommandBarButton
                    Label="Play"
                    Icon="&#xE102;"
                    Foreground="DarkGreen"
                    x:Uid="PlayButton"
                    DefaultButton="True"
                    Style="{StaticResource ForegroundCustomCommandBarButton}"
                    IsEnabled="{x:Bind ViewModel.PlayAvailable, Mode=OneWay, FallbackValue=False}"
                    Click="{x:Bind ViewModel.RequestPlay}"/>
                <customCommandBar:CustomCommandBarButton
                    Label="Memory state"
                    Icon="&#xE74C;"
                    DefaultButton="True"
                    x:Uid="MemoryState"
                    Click="{x:Bind RequestShowMemoryState}"/>
                <customCommandBar:CustomCommandBarButton
                    Label="Clear"
                    Icon="&#xE10A;"
                    x:Uid="Clear"
                    IsEnabled="{x:Bind ViewModel.ClearAvailable, Mode=OneWay, FallbackValue=False}"
                    DefaultButton="True"
                    Click="{x:Bind ViewModel.RequestClearConsoleLine}"/>
                <customCommandBar:CustomCommandBarButton
                    Label="Undo"
                    Icon="&#xE750;"
                    x:Uid="DeleteButton"
                    IsEnabled="{x:Bind ViewModel.UndoAvailable, Mode=OneWay, FallbackValue=False}"
                    DefaultButton="True"
                    Click="{x:Bind ViewModel.RequestUndoConsoleCharacter}"/>
                
                <!--IDE buttons-->
                <customCommandBar:CustomCommandBarButton
                    Label="Play"
                    Icon="&#xE102;"
                    Foreground="DarkGreen"
                    Style="{StaticResource ForegroundCustomCommandBarButton}"
                    x:Uid="PlayButton"
                    IsEnabled="{x:Bind ViewModel.IDECodeAvailable, Mode=OneWay, FallbackValue=False}"
                    Click="{x:Bind ViewModel.RequestPlay}"/>
                <customCommandBar:CustomCommandBarButton
                    Label="Debug"
                    Icon="&#xEBE8;"
                    Style="{StaticResource ForegroundCustomCommandBarButton}"
                    Foreground="{StaticResource RedDangerBrush}"
                    x:Uid="DebugButton"
                    IsEnabled="{x:Bind ViewModel.DebugAvailable, Mode=OneWay, FallbackValue=False}"
                    Click="{x:Bind ViewModel.RequestDebug}"/>
                <customCommandBar:CustomCommandBarSeparator/>
                <customCommandBar:CustomCommandBarButton
                    Label="Move"
                    Icon="&#xE759;"
                    x:Uid="MoveButton"
                    Click="MoveButton_Click"/>
                <customCommandBar:CustomCommandBarButton
                    Label="New line"
                    Icon="&#xE751;"
                    x:Uid="NewLineButton"
                    Click="{x:Bind ViewModel.RequestAddIDENewLine}"/>
                <customCommandBar:CustomCommandBarButton
                    Label="Delete"
                    Icon="&#xE750;"
                    x:Uid="DeleteButton"
                    IsEnabled="{x:Bind ViewModel.DeleteAvailable, Mode=OneWay, FallbackValue=False}"
                    Click="{x:Bind ViewModel.RequestIDEDeleteAction}"/>
                <customCommandBar:CustomCommandBarButton
                    Label="Undo"
                    Icon="&#xE10E;"
                    IsEnabled="{x:Bind ViewModel.UndoAvailable, Mode=OneWay, FallbackValue=False}"
                    x:Uid="Undo"
                    Click="{x:Bind ViewModel.RequestIDEUndo}"/>
                <customCommandBar:CustomCommandBarButton
                    Label="Redo"
                    Icon="&#xE10D;"
                    x:Uid="RedoButton"
                    IsEnabled="{x:Bind ViewModel.RedoAvailable, Mode=OneWay, FallbackValue=False}"
                    Click="{x:Bind ViewModel.RequestIDERedo}"/>
            </customCommandBar:CommandBarWithButtonsAnimations.PrimaryCommands>
            <customCommandBar:CommandBarWithButtonsAnimations.SecondaryCommands>
                <customCommandBar:CustomCommandBarButton
                    Style="{StaticResource SecondaryAppBarButtonWithLightEffect}"
                    Label="Repeat last script"
                    x:Uid="RepeatScript"
                    Icon="&#xE117;"
                    IsEnabled="{x:Bind ViewModel.RepeatLastScriptAvailable, Mode=OneWay, FallbackValue=False}"
                    Click="{x:Bind ViewModel.RequestRepeatLastConsoleScript}"
                    Visibility="{x:Bind PivotControl.SelectedIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=0, Mode=OneWay, FallbackValue=Collapsed}"/>
                <customCommandBar:CustomCommandBarButton
                    Style="{StaticResource SecondaryAppBarButtonWithLightEffect}"
                    Label="Restart"
                    x:Uid="Restart"
                    Icon="&#xE9F3;"
                    IsEnabled="{x:Bind ViewModel.RestartAvailable, Mode=OneWay, FallbackValue=False}"
                    Click="{x:Bind ViewModel.RequestRestartConsole}"
                    Visibility="{x:Bind PivotControl.SelectedIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=0, Mode=OneWay, FallbackValue=Collapsed}"/>
                <customCommandBar:CustomCommandBarButton
                    Style="{StaticResource SecondaryAppBarButtonWithLightEffect}"
                    Label="Clear screen"
                    x:Uid="Clrscr"
                    Icon="&#xEA99;"
                    IsEnabled="{x:Bind ViewModel.ClearScreenAvailable, Mode=OneWay, FallbackValue=False}"
                    Click="{x:Bind ViewModel.RequestClearScreen}"/>
                <customCommandBar:CustomCommandBarButton
                    Style="{StaticResource SecondaryAppBarButtonWithLightEffect}"
                    Label="Show Unicode characters"
                    x:Uid="Unicode"
                    Icon="&#xEBDB;"
                    Click="{x:Bind RequestShowUnicodeCharacters}"/>
                <AppBarSeparator Visibility="{x:Bind PivotControl.SelectedIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=1, Mode=OneWay, FallbackValue=Collapsed}"/>
                <customCommandBar:CustomCommandBarButton
                    Style="{StaticResource SecondaryAppBarButtonWithLightEffect}"
                    Label="Browse code library"
                    x:Uid="CodeLibraryButton"
                    Icon="&#xED25;"
                    Click="{x:Bind RequestShowCodeLibrary}"
                    Visibility="{x:Bind PivotControl.SelectedIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=1, Mode=OneWay, FallbackValue=Collapsed}"/>
                <customCommandBar:CustomCommandBarButton
                    Style="{StaticResource SecondaryAppBarButtonWithLightEffect}"
                    Label="Save"
                    x:Uid="SaveButton"
                    Icon="&#xE105;"
                    Click="{x:Bind ViewModel.RequestSaveSourceCode}"
                    IsEnabled="{x:Bind ViewModel.SaveAvailable, Mode=OneWay, FallbackValue=False}"
                    Visibility="{x:Bind PivotControl.SelectedIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=1, Mode=OneWay, FallbackValue=Collapsed}"/>
                <customCommandBar:CustomCommandBarButton
                    Style="{StaticResource SecondaryAppBarButtonWithLightEffect}"
                    Label="Save as"
                    x:Uid="SaveAsButton"
                    Icon="&#xEA35;"
                    Click="{x:Bind ViewModel.RequestSaveSourceCodeAs}"
                    IsEnabled="{x:Bind ViewModel.SaveAsAvailable, Mode=OneWay, FallbackValue=True}"
                    Visibility="{x:Bind PivotControl.SelectedIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=1, Mode=OneWay, FallbackValue=Collapsed}"/>
                <AppBarSeparator/>
                <customCommandBar:CustomCommandBarButton
                    Style="{StaticResource SecondaryAppBarButtonWithLightEffect}"
                    Label="Settings"
                    x:Uid="SettingsButton"
                    Icon="&#xE115;"
                    Click="SettingsButton_Click"/>
                <customCommandBar:CustomCommandBarButton
                    Style="{StaticResource SecondaryAppBarButtonWithLightEffect}"
                    Label="About"
                    x:Uid="AboutButton"
                    Icon="&#xED15;"
                    Click="AboutButton_Click"/>
            </customCommandBar:CommandBarWithButtonsAnimations.SecondaryCommands>
        </customCommandBar:CommandBarWithButtonsAnimations>

        <!--Status bar-->
        <local:BottomEdgeInfoBar
            x:Name="InfoBar"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignBottomWithPanel="True"/>
    </RelativePanel>
</UserControl>
