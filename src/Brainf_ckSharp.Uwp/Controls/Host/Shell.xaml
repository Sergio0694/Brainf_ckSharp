<UserControl
    x:Class="Brainf_ckSharp.Uwp.Controls.Host.Shell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:controls="using:Brainf_ckSharp.Uwp.Controls.Windows.UI.Xaml.Controls"
    xmlns:views="using:Brainf_ckSharp.Uwp.Views"
    xmlns:shellHeader="using:Brainf_ckSharp.Uwp.Controls.Host.Header"
    xmlns:inputPanel="using:Brainf_ckSharp.Uwp.Controls.Host.InputPanel"
    xmlns:host="using:Brainf_ckSharp.Uwp.Controls.SubPages.Host"
    xmlns:attachedProperties="using:Brainf_ckSharp.Uwp.AttachedProperties"
    xmlns:converters="using:Brainf_ckSharp.Uwp.Converters"
    xmlns:local="using:Brainf_ckSharp.Uwp.Controls.Host"
    xmlns:settings="using:Brainf_ckSharp.Shared.Enums.Settings"
    xmlns:windows="using:Windows.System"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:Brainf_ckSharp.Uwp.Behaviors"
    mc:Ignorable="d"
    d:DesignHeight="600"
    d:DesignWidth="400"
    Loaded="Shell_OnLoaded">
    <UserControl.Resources>

        <!--Converter for the two way binding. This is needed because x:Bind
            doesn't support static functions being used for two way binding yet.
            Not using a converter results in the convert back value being discarded.-->
        <converters:PivotSelectionConverter x:Key="PivotSelectionConverter"/>
    </UserControl.Resources>

    <!--Main app UI-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="68"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="24"/>
        </Grid.RowDefinitions>

        <!--Console and IDE-->
        <Pivot
            Grid.Row="0"
            Grid.RowSpan="2"
            Style="{StaticResource ExpandedPivotWithNoHeaderStyle}"
            SelectedIndex="{x:Bind converters:PivotSelectionConverter.ConvertToIndex(ViewModel.SelectedView), Mode=OneWay}">
            <PivotItem>
                <views:ConsoleView x:Name="ConsolePivotItem" attachedProperties:ObservableRecipientHelper.IsActive="{x:Bind ViewModel.SelectedView.Equals(settings:ViewType.Console), Mode=OneWay}"/>
            </PivotItem>
            <PivotItem>
                <views:IdeView x:Name="IdePivotItem" attachedProperties:ObservableRecipientHelper.IsActive="{x:Bind ViewModel.SelectedView.Equals(settings:ViewType.Ide), Mode=OneWay}"/>
            </PivotItem>
        </Pivot>

        <!--Header drop shadow-->
        <Rectangle
            Grid.Row="1"
            VerticalAlignment="Top"
            IsHitTestVisible="False"
            Height="8">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                    <GradientStop Color="#60000000" Offset="1"/>
                    <GradientStop Offset="0"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>

        <!--Header panel-->
        <shellHeader:HeaderPanel
            Grid.Row="0"
            SelectedIndex="{x:Bind ViewModel.SelectedView, Converter={StaticResource PivotSelectionConverter}, Mode=TwoWay}"/>

        <!--Expandable keyboard area-->
        <Border
            Grid.Row="1"
            BorderThickness="0,1,0,0"
            BorderBrush="#FF323232"
            Background="{StaticResource VirtualKeyboardBackgroundBrush}"
            VerticalAlignment="Bottom"
            SizeChanged="Border_SizeChanged">
            <controls:ExpanderControl
                HeaderHeight="48"
                ExpandableContentHeight="180"
                IsExpanded="{x:Bind ViewModel.IsVirtualKeyboardEnabled, Mode=TwoWay}">
                <controls:ExpanderControl.Header>
                    <inputPanel:StdinHeader
                        x:Name="StdinHeader"
                        ShellSelectedIndex="{x:Bind converters:PivotSelectionConverter.ConvertToIndex(ViewModel.SelectedView), Mode=OneWay}"/>
                </controls:ExpanderControl.Header>
                <controls:ExpanderControl.ExpandableContent>
                    <Pivot
                        Style="{StaticResource ExpandedPivotWithNoHeaderStyle}"
                        SelectedIndex="{x:Bind StdinHeader.StdinSelectedIndex, Mode=OneWay, FallbackValue=0}"
                        SelectionChanged="Pivot_OnSelectionChanged">
                        <interactivity:Interaction.Behaviors>
                            <behaviors:LockedPivotBehavior/>
                        </interactivity:Interaction.Behaviors>
                        <PivotItem>
                            <inputPanel:VirtualKeyboard/>
                        </PivotItem>
                        <PivotItem>
                            <inputPanel:CompactMemoryViewer attachedProperties:ObservableRecipientHelper.IsActive="{x:Bind StdinHeader.StdinSelectedIndex.Equals(1), Mode=OneWay}"/>
                        </PivotItem>
                    </Pivot>
                </controls:ExpanderControl.ExpandableContent>
            </controls:ExpanderControl>
        </Border>

        <!--Command bar-->
        <CommandBar
            Grid.Row="2"
            IsDynamicOverflowEnabled="False"
            Style="{StaticResource CommandBarRevealStyle}">
            <interactivity:Interaction.Behaviors>
                <behaviors:AnimatedCommandBarBehavior IsPrimaryContentDisplayed="{x:Bind ViewModel.SelectedView.Equals(settings:ViewType.Console), Mode=OneWay}"/>
            </interactivity:Interaction.Behaviors>
            <CommandBar.PrimaryCommands>

                <!--Console buttons-->
                <AppBarButton
                    x:Uid="Shell/Run"
                    Label="Run"
                    Icon="{ui:FontIcon Glyph={StaticResource RunIcon}}"
                    Foreground="{StaticResource RunBrush}"
                    Click="{x:Bind ViewModel.RunConsoleScript}">
                    <AppBarButton.Resources>
                        <SolidColorBrush x:Key="AppBarButtonForegroundPointerOver" Color="{StaticResource RunColor}"/>
                        <SolidColorBrush x:Key="AppBarButtonForegroundPressed" Color="{StaticResource RunColor}"/>
                    </AppBarButton.Resources>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F5"/>
                    </AppBarButton.KeyboardAccelerators>
                    <AppBarButton.Tag>
                        <x:Boolean>True</x:Boolean>
                    </AppBarButton.Tag>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/Delete"
                    Label="Delete"
                    Icon="{ui:FontIcon Glyph={StaticResource DeleteKeyIcon}}"
                    Click="{x:Bind ViewModel.DeleteConsoleOperator}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Back"/>
                    </AppBarButton.KeyboardAccelerators>
                    <AppBarButton.Tag>
                        <x:Boolean>True</x:Boolean>
                    </AppBarButton.Tag>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/Clear"
                    Label="Clear"
                    Icon="{ui:FontIcon Glyph={StaticResource ClearIcon}}"
                    Click="{x:Bind ViewModel.ClearConsoleCommand}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Delete" Modifiers="Control"/>
                    </AppBarButton.KeyboardAccelerators>
                    <AppBarButton.Tag>
                        <x:Boolean>True</x:Boolean>
                    </AppBarButton.Tag>
                </AppBarButton>

                <!--IDE buttons-->
                <AppBarButton
                    x:Uid="Shell/Run"
                    Label="Run"
                    Icon="{ui:FontIcon Glyph={StaticResource RunIcon}}"
                    Foreground="{StaticResource RunBrush}"
                    Click="{x:Bind ViewModel.RunIdeScript}">
                    <AppBarButton.Resources>
                        <SolidColorBrush x:Key="AppBarButtonForegroundPointerOver" Color="{StaticResource RunColor}"/>
                        <SolidColorBrush x:Key="AppBarButtonForegroundPressed" Color="{StaticResource RunColor}"/>
                    </AppBarButton.Resources>
                    <AppBarButton.Tag>
                        <x:Boolean>False</x:Boolean>
                    </AppBarButton.Tag>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/Debug"
                    Label="Debug"
                    Icon="{ui:FontIcon Glyph={StaticResource DebugIcon}}"
                    Foreground="{StaticResource DebugBrush}"
                    Click="{x:Bind ViewModel.DebugIdeScript}">
                    <AppBarButton.Resources>
                        <SolidColorBrush x:Key="AppBarButtonForegroundPointerOver" Color="{StaticResource DebugColor}"/>
                        <SolidColorBrush x:Key="AppBarButtonForegroundPressed" Color="{StaticResource DebugColor}"/>
                    </AppBarButton.Resources>
                    <AppBarButton.Tag>
                        <x:Boolean>False</x:Boolean>
                    </AppBarButton.Tag>
                </AppBarButton>
                <AppBarSeparator>
                    <AppBarSeparator.Tag>
                        <x:Boolean>False</x:Boolean>
                    </AppBarSeparator.Tag>
                </AppBarSeparator>
                <AppBarButton
                    x:Uid="Shell/Move"
                    Label="Move"
                    Icon="{ui:FontIcon Glyph={StaticResource MoveIcon}}">
                    <AppBarButton.Tag>
                        <x:Boolean>False</x:Boolean>
                    </AppBarButton.Tag>
                    <AppBarButton.Flyout>
                        <CommandBarFlyout>
                            <AppBarButton
                                x:Uid="Shell/Up"
                                Label="Up"
                                ToolTipService.ToolTip="Up"
                                Icon="{ui:FontIcon Glyph={StaticResource UpIcon}}"
                                Command="{x:Bind MoveCommand}">
                                <AppBarButton.CommandParameter>
                                    <windows:VirtualKey>Up</windows:VirtualKey>
                                </AppBarButton.CommandParameter>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="Shell/Down"
                                Label="Down"
                                ToolTipService.ToolTip="Down"
                                Icon="{ui:FontIcon Glyph={StaticResource DownIcon}}"
                                Command="{x:Bind MoveCommand}">
                                <AppBarButton.CommandParameter>
                                    <windows:VirtualKey>Down</windows:VirtualKey>
                                </AppBarButton.CommandParameter>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="Shell/Left"
                                Label="Left"
                                ToolTipService.ToolTip="Left"
                                Icon="{ui:FontIcon Glyph={StaticResource LeftIcon}}"
                                Command="{x:Bind MoveCommand}">
                                <AppBarButton.CommandParameter>
                                    <windows:VirtualKey>Left</windows:VirtualKey>
                                </AppBarButton.CommandParameter>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="Shell/Right"
                                Label="Right"
                                ToolTipService.ToolTip="Right"
                                Icon="{ui:FontIcon Glyph={StaticResource RightIcon}}"
                                Command="{x:Bind MoveCommand}">
                                <AppBarButton.CommandParameter>
                                    <windows:VirtualKey>Right</windows:VirtualKey>
                                </AppBarButton.CommandParameter>
                            </AppBarButton>
                        </CommandBarFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/NewLine"
                    Label="New line"
                    Icon="{ui:FontIcon Glyph={StaticResource NewLineIcon}}"
                    Click="{x:Bind ViewModel.InsertNewLine}">
                    <AppBarButton.Tag>
                        <x:Boolean>False</x:Boolean>
                    </AppBarButton.Tag>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/Delete"
                    Label="Delete"
                    Icon="{ui:FontIcon Glyph={StaticResource DeleteKeyIcon}}"
                    Click="{x:Bind ViewModel.DeleteIdeCharacter}">
                    <AppBarButton.Tag>
                        <x:Boolean>False</x:Boolean>
                    </AppBarButton.Tag>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/Undo"
                    Label="Undo"
                    Icon="{ui:FontIcon Glyph={StaticResource UndoIcon}}">
                    <AppBarButton.Tag>
                        <x:Boolean>False</x:Boolean>
                    </AppBarButton.Tag>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/Redo"
                    Label="Redo"
                    Icon="{ui:FontIcon Glyph={StaticResource RedoIcon}}">
                    <AppBarButton.Tag>
                        <x:Boolean>False</x:Boolean>
                    </AppBarButton.Tag>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
                <AppBarButton
                    x:Uid="Shell/UserGuide"
                    Label="User guide"
                    Icon="{ui:FontIcon Glyph={StaticResource UserGuideIcon}}"
                    Click="{x:Bind ViewModel.RequestUserGuide}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="G" Modifiers="Control"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/UnicodeCharacters"
                    Label="Unicode characters"
                    Icon="{ui:FontIcon Glyph={StaticResource ShowUnicodeMapIcon}}"
                    Click="{x:Bind ViewModel.RequestUnicodeMap}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="U" Modifiers="Control"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarSeparator/>
                <AppBarButton
                    x:Uid="Shell/RepeatLastScript"
                    Label="Repeat last script"
                    Icon="{ui:FontIcon Glyph={StaticResource RepeatScriptIcon}}"
                    Click="{x:Bind ViewModel.RepeatLastConsoleScript}"
                    Visibility="{x:Bind converters:PivotSelectionConverter.ConvertToVisibility(ViewModel.SelectedView, settings:ViewType.Console), Mode=OneWay}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="F2" Modifiers="Control"
                            IsEnabled="{x:Bind ViewModel.SelectedView.Equals(settings:ViewType.Console), Mode=OneWay}"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/Restart"
                    Label="Restart"
                    Icon="{ui:FontIcon Glyph={StaticResource RestartIcon}}"
                    Click="{x:Bind ViewModel.RestartConsole}"
                    Visibility="{x:Bind converters:PivotSelectionConverter.ConvertToVisibility(ViewModel.SelectedView, settings:ViewType.Console), Mode=OneWay}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="F6" Modifiers="Control"
                            IsEnabled="{x:Bind ViewModel.SelectedView.Equals(settings:ViewType.Console), Mode=OneWay}"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/ClearScreen"
                    Label="Clear screen"
                    Icon="{ui:FontIcon Glyph={StaticResource ClearScreen}}"
                    Click="{x:Bind ViewModel.ClearConsoleScreen}"
                    Visibility="{x:Bind converters:PivotSelectionConverter.ConvertToVisibility(ViewModel.SelectedView, settings:ViewType.Console), Mode=OneWay}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="F4" Modifiers="Control"
                            IsEnabled="{x:Bind ViewModel.SelectedView.Equals(settings:ViewType.Console), Mode=OneWay}"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/NewFile"
                    Label="New file"
                    Icon="{ui:FontIcon Glyph={StaticResource NewFileIcon}}"
                    Visibility="{x:Bind converters:PivotSelectionConverter.ConvertToVisibility(ViewModel.SelectedView, settings:ViewType.Ide), Mode=OneWay}"
                    Click="{x:Bind ViewModel.NewIdeFile}"/>
                <AppBarSeparator Visibility="{x:Bind converters:PivotSelectionConverter.ConvertToVisibility(ViewModel.SelectedView, settings:ViewType.Ide), Mode=OneWay}"/>
                <AppBarButton
                    x:Uid="Shell/OpenCodeLibrary"
                    Label="Open code library"
                    Icon="{ui:FontIcon Glyph={StaticResource OpenCodeLibraryIcon}}"
                    Visibility="{x:Bind converters:PivotSelectionConverter.ConvertToVisibility(ViewModel.SelectedView, settings:ViewType.Ide), Mode=OneWay}"
                    Click="{x:Bind ViewModel.RequestCodeLibrary}"/>
                <AppBarButton
                    x:Uid="Shell/OpenFile"
                    Label="Open file"
                    Icon="{ui:FontIcon Glyph={StaticResource OpenFileIcon}}"
                    Visibility="{x:Bind converters:PivotSelectionConverter.ConvertToVisibility(ViewModel.SelectedView, settings:ViewType.Ide), Mode=OneWay}"
                    Click="{x:Bind ViewModel.OpenFile}"/>
                <AppBarSeparator Visibility="{x:Bind converters:PivotSelectionConverter.ConvertToVisibility(ViewModel.SelectedView, settings:ViewType.Ide), Mode=OneWay}"/>
                <AppBarButton
                    x:Uid="Shell/Save"
                    Label="Save"
                    Icon="{ui:FontIcon Glyph={StaticResource SaveIcon}}"
                    Visibility="{x:Bind converters:PivotSelectionConverter.ConvertToVisibility(ViewModel.SelectedView, settings:ViewType.Ide), Mode=OneWay}"
                    Click="{x:Bind ViewModel.SaveFile}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="S" Modifiers="Control"
                            IsEnabled="{x:Bind ViewModel.SelectedView.Equals(settings:ViewType.Ide), Mode=OneWay}"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/SaveAs"
                    Label="Save as"
                    Icon="{ui:FontIcon Glyph={StaticResource SaveAsIcon}}"
                    Visibility="{x:Bind converters:PivotSelectionConverter.ConvertToVisibility(ViewModel.SelectedView, settings:ViewType.Ide), Mode=OneWay}"
                    Click="{x:Bind ViewModel.SaveFileAs}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="S" Modifiers="Menu"
                            IsEnabled="{x:Bind ViewModel.SelectedView.Equals(settings:ViewType.Ide), Mode=OneWay}"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarSeparator/>
                <AppBarButton
                    x:Uid="Shell/Settings"
                    Label="Settings"
                    Icon="{ui:FontIcon Glyph={StaticResource SettingsIcon}}"
                    Click="{x:Bind ViewModel.RequestSettings}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="I" Modifiers="Control"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Uid="Shell/About"
                    Label="About"
                    Icon="{ui:FontIcon Glyph={StaticResource AboutIcon}}"
                    Click="{x:Bind ViewModel.RequestAboutInfo}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="A" Modifiers="Control"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>

        <!--Status bar-->
        <local:StatusBar Grid.Row="3"/>

        <!--Sub page host-->
        <host:SubPageHost
            Grid.Row="0"
            Grid.RowSpan="4"/>
    </Grid>
</UserControl>
