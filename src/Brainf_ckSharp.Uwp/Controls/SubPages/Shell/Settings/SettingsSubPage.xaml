<UserControl
    x:Class="Brainf_ckSharp.Uwp.Controls.SubPages.Shell.Settings.SettingsSubPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:host="using:Brainf_ckSharp.Uwp.Controls.SubPages.Host"
    xmlns:attachedProperties="using:Brainf_ckSharp.Uwp.AttachedProperties"
    xmlns:jumpList="using:Brainf_ckSharp.Uwp.Controls.DataTemplates.JumpList"
    xmlns:templateSelectors="using:Brainf_ckSharp.Uwp.TemplateSelectors"
    xmlns:collections="using:CommunityToolkit.Mvvm.Collections"
    xmlns:interpreterEnums="using:Brainf_ckSharp.Enums"
    xmlns:enums="using:Brainf_ckSharp.Shared.Enums"
    xmlns:enumsSettings="using:Brainf_ckSharp.Shared.Enums.Settings"
    xmlns:dataTemplates="using:Brainf_ckSharp.Uwp.Controls.DataTemplates"
    xmlns:converters="using:Brainf_ckSharp.Uwp.Converters"
    xmlns:convertersSubPages="using:Brainf_ckSharp.Uwp.Converters.SubPages"
    xmlns:convertersToolkit="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:controls="using:Brainf_ckSharp.Uwp.Controls.Windows.UI.Xaml.Controls"
    xmlns:sections="using:Brainf_ckSharp.Shared.ViewModels.Controls.SubPages.Settings.Sections"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>

        <!--Converters-->
        <convertersToolkit:BoolNegationConverter x:Key="BoolNegationConverter"/>

        <!--IDE settings template-->
        <DataTemplate
            x:Name="IdeSettingsTemplate"
            x:DataType="sections:IdeSettingsSectionViewModel">
            <StackPanel Spacing="4">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Loaded">
                        <core:InvokeCommandAction Command="{x:Bind InitializeCommand}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>

                <!--Theme-->
                <TextBlock
                    x:Uid="Settings/Theme"
                    TextWrapping="Wrap"
                    Text="Theme"/>
                <Grid
                    Margin="0,4,0,0"
                    MinWidth="240"
                    MinHeight="112"
                    HorizontalAlignment="Left">

                    <!--Selector-->
                    <controls:ComboBoxWithNoScrollWheelSupport
                        x:Name="ThemeSelectionComboBox"
                        IsEnabled="{x:Bind IsThemeSelectorAvailable, Mode=OneWay}"
                        CornerRadius="0"
                        Padding="2,0,0,0"
                        MinWidth="240"
                        MinHeight="112"
                        ItemsSource="{x:Bind IdeThemes}"
                        SelectedItem="{x:Bind IdeTheme, Mode=TwoWay}">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="Margin" Value="0,2,0,2"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <ComboBox.ItemTemplate>
                            <DataTemplate x:DataType="enumsSettings:IdeTheme">
                                <dataTemplates:IdeThemePreviewTemplate Theme="{x:Bind}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </controls:ComboBoxWithNoScrollWheelSupport>

                    <!--This control has a layout issue that causes it not to be properly aligned
                        horizontally. The workaround is to align it to the left and manually offset it.-->
                    <Border
                        Visibility="{Binding ElementName=ThemeSelectionComboBox, Path=IsEnabled, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
                        Background="#C0000000">
                        <Button
                            Style="{StaticResource ExpandedSquareButtonRevealStyle}"
                            Command="{x:Bind UnlockThemesSelectorCommand}">
                            <StackPanel Spacing="8">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    TextAlignment="Center"
                                    IsTextScaleFactorEnabled="False"
                                    Foreground="{ThemeResource SystemControlHighlightAccentBrush}"
                                    Text="{StaticResource UnlockIcon}"
                                    FontFamily="Segoe MDL2 Assets"
                                    FontSize="32"/>
                                <TextBlock
                                    x:Uid="Settings/UnlockTheme"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    TextAlignment="Center"
                                    IsTextScaleFactorEnabled="False"
                                    Foreground="{ThemeResource SystemControlHighlightAccentBrush}"
                                    Text="Tap to unlock"
                                    FontSize="14"
                                    FontWeight="SemiBold"/>
                            </StackPanel>
                        </Button>
                    </Border>
                </Grid>

                <!--Brackets on new line-->
                <TextBlock
                    x:Uid="Settings/BracketsOnNewLine"
                    Margin="0,8,0,0"
                    TextWrapping="Wrap"
                    Text="Brackets position"/>
                <controls:ComboBoxWithNoScrollWheelSupport
                    CornerRadius="0"
                    Margin="0,4,0,0"
                    MinWidth="140"
                    ItemsSource="{x:Bind BracketsFormattingStyles}"
                    SelectedItem="{x:Bind BracketsFormattingStyle, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate x:DataType="enumsSettings:BracketsFormattingStyle">
                            <TextBlock Text="{x:Bind converters:EnumConverter.Convert((enumsSettings:BracketsFormattingStyle))}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </controls:ComboBoxWithNoScrollWheelSupport>

                <!--Render whitespaces-->
                <TextBlock
                    x:Uid="Settings/RenderWhitespaces"
                    Margin="0,8,0,0"
                    TextWrapping="Wrap"
                    Text="Render whitespaces"/>
                <ToggleSwitch IsOn="{x:Bind RenderWhitespaces, Mode=TwoWay}"/>
            </StackPanel>
        </DataTemplate>

        <!--UI settings template-->
        <DataTemplate
            x:Name="UISettingsTemplate"
            x:DataType="sections:UISettingsSectionViewModel">
            <StackPanel Spacing="4">

                <!--Show PBrain operators-->
                <TextBlock
                    x:Uid="Settings/ShowPBrainOperators"
                    Margin="0,8,0,0"
                    TextWrapping="Wrap"
                    Text="Show PBrain operators"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ToggleSwitch IsOn="{x:Bind ShowPBrainButtons, Mode=TwoWay}"/>
                    <HyperlinkButton 
                        Margin="0,0,20,0"
                        HorizontalAlignment="Right"
                        Grid.Column="1"
                        Click="ShowPBrainButtonsInfo_Clicked">
                        <TextBlock>
                            <Run
                                Text="&#xEC26;"
                                FontFamily="Segoe MDL2 Assets"/>
                            <Run
                                x:Uid="Settings/WhatsThis"
                                Text="What's this?"/>
                        </TextBlock>
                    </HyperlinkButton>
                </Grid>

                <!--Clear stdin buffer on execution-->
                <TextBlock
                    x:Uid="Settings/ClearStdinBufferOnExecution"
                    Margin="0,8,0,0"
                    TextWrapping="Wrap"
                    Text="Clear stdin buffer on execution"/>
                <ToggleSwitch IsOn="{x:Bind ClearStdinBufferOnRequest, Mode=TwoWay}"/>
            </StackPanel>
        </DataTemplate>

        <!--Interpreter settings template-->
        <DataTemplate
            x:Name="InterpreterSettingsTemplate"
            x:DataType="sections:InterpreterSettingsSectionViewModel">
            <StackPanel Spacing="4">

                <!--Overflow mode-->
                <TextBlock
                    x:Uid="Settings/OverflowMode"
                    TextWrapping="Wrap"
                    Text="Overflow mode"/>
                <controls:ComboBoxWithNoScrollWheelSupport
                    CornerRadius="0"
                    Margin="0,4,0,0"
                    MinWidth="140"
                    ItemsSource="{x:Bind OverflowModes}"
                    SelectedItem="{x:Bind OverflowMode, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate x:DataType="interpreterEnums:OverflowMode">
                            <TextBlock Text="{x:Bind converters:EnumConverter.Convert((interpreterEnums:OverflowMode))}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </controls:ComboBoxWithNoScrollWheelSupport>

                <!--Memory size-->
                <TextBlock
                    x:Uid="Settings/MemorySize"
                    Margin="0,8,0,0"
                    TextWrapping="Wrap"
                    Text="Memory size"/>
                <controls:ComboBoxWithNoScrollWheelSupport
                    CornerRadius="0"
                    Margin="0,4,0,0"
                    MinWidth="140"
                    ItemsSource="{x:Bind MemorySizeOptions}"
                    SelectedItem="{x:Bind MemorySize, Mode=TwoWay}"/>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <host:SubPageFrame
        x:Uid="Settings/Frame"
        Title="SETTINGS"
        Background="#72000000">

        <!--Semantic zoom-->
        <SemanticZoom attachedProperties:SemanticZoomHelper.Source="{x:Bind ViewModel.Source, Mode=OneWay}">
            <SemanticZoom.ZoomedInView>

                <!--ZoomedInView-->
                <ListView
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    IsItemClickEnabled="False"
                    SelectionMode="None">
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="Padding" Value="12,16,12,16"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Background" Value="#FF171717"/>
                        </Style>
                    </ListView.Resources>
                    <ListView.GroupStyle>
                        <GroupStyle HeaderContainerStyle="{StaticResource ExpandedListViewHeaderItemStyle}">
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate x:DataType="collections:IReadOnlyObservableGroup">
                                    <jumpList:SemanticZoomZoomedInViewHeaderTemplate
                                        Title="{x:Bind converters:EnumConverter.Convert((enums:SettingsSection)Key)}"
                                        Margin="0,-8,0,0"/>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>
                    <ListView.ItemTemplateSelector>
                        <templateSelectors:SettingsSectionTemplateSelector
                            IdeSettingsTemplate="{x:Bind IdeSettingsTemplate}"
                            UISettingsTemplate="{x:Bind UISettingsTemplate}"
                            InterpreterSettingsTemplate="{x:Bind InterpreterSettingsTemplate}"/>
                    </ListView.ItemTemplateSelector>
                </ListView>
            </SemanticZoom.ZoomedInView>
            <SemanticZoom.ZoomedOutView>

                <!--ZoomedOutView-->
                <ListView>
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Margin" Value="0,0,0,4"/>
                            <Setter Property="Padding" Value="12,16,12,16"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Background" Value="#FF171717"/>
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="ICollectionViewGroup">
                            <jumpList:SemanticZoomZoomedOutViewHeaderTemplate
                                Title="{x:Bind converters:EnumConverter.Convert((enums:SettingsSection)Group.(collections:IReadOnlyObservableGroup.Key))}"
                                DescriptionText="{x:Bind convertersSubPages:SettingsSectionConverters.ConvertSectionDescription((collections:IReadOnlyObservableGroup)Group)}"/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>
    </host:SubPageFrame>
</UserControl>
