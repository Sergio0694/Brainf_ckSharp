<ResourceDictionary
    x:Class="Brainf_ckSharp.Uwp.Controls.SubPages.Views.IdeResultSubPageTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:models="using:Brainf_ckSharp.Models"
    xmlns:attachedProperties="using:Brainf_ckSharp.Uwp.AttachedProperties"
    xmlns:convertersConsole="using:Brainf_ckSharp.Uwp.Converters.Console"
    xmlns:convertersIde="using:Brainf_ckSharp.Uwp.Converters.Ide"
    xmlns:convertersUI="using:Brainf_ckSharp.Uwp.Converters.UI"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:Brainf_ckSharp.Uwp.Converters"
    xmlns:views="using:Brainf_ckSharp.Shared.Models.Ide.Views"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls">

    <!--Exception type template-->
    <DataTemplate
        x:Key="ExceptionTypeTemplate"
        x:DataType="views:IdeResultWithSectionInfo">
        <TextBlock
            FontSize="16"
            TextWrapping="Wrap"
            Text="{x:Bind convertersConsole:ExitCodeConverter.Convert(Result.ExitCode)}"
            FontWeight="SemiBold"
            Foreground="#FF900000"/>
    </DataTemplate>

    <!--Halting position-->
    <DataTemplate
        x:Key="HaltingPositionTemplate"
        x:DataType="views:IdeResultWithSectionInfo">
        <Grid HorizontalAlignment="Left">

            <!--Outer border-->
            <Border
                BorderThickness="2"
                BorderBrush="#20FFFFFF"/>

            <!--Value and body-->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!--Operator-->
                <Canvas Background="#20000000"/>
                <TextBlock
                    Grid.Column="0"
                    FontSize="20"
                    Foreground="LightGray"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center">
                    <Span attachedProperties:Brainf_ckInlineFormatterHelper.Source="{x:Bind Result.HaltingInfo.HaltingOperator.ToString()}"/>
                </TextBlock>

                <!--Offset-->
                <Canvas
                    Background="#06FFFFFF"
                    Grid.Column="1"/>
                <TextBlock
                    Padding="12"
                    Grid.Column="1"
                    FontSize="16"
                    TextWrapping="Wrap"
                    FontWeight="SemiBold"
                    Foreground="DarkRed"
                    Text="{x:Bind converters:LocalizationConverter.Convert('IdeResults/UppercaseAtPosition', Result.HaltingInfo.HaltingOffset)}"/>
            </Grid>
        </Grid>
    </DataTemplate>

    <!--Stdout-->
    <DataTemplate
        x:Key="StdoutTemplate"
        x:DataType="views:IdeResultWithSectionInfo">
        <TextBlock
            Text="{x:Bind Result.Stdout}"
            FontSize="16"
            Foreground="Cornsilk"
            TextWrapping="Wrap"/>
    </DataTemplate>

    <!--Source code-->
    <DataTemplate
        x:Key="SourceCodeTemplate"
        x:DataType="views:IdeResultWithSectionInfo">
        <TextBlock
            FontSize="16"
            TextWrapping="Wrap">
            <Span attachedProperties:Brainf_ckInlineFormatterHelper.Source="{x:Bind Result.SourceCode}"/>
        </TextBlock>
    </DataTemplate>

    <!--Function definitions-->
    <DataTemplate
        x:Key="FunctionDefinitionsTemploate"
        x:DataType="views:IdeResultWithSectionInfo">
        <ListView
            IsItemClickEnabled="False"
            SelectionMode="None"
            ItemsSource="{x:Bind Result.Functions}">
            <ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Setter Property="Margin" Value="4"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.Resources>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:FunctionDefinition">
                    <Grid RowSpacing="4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!--Outer border-->
                        <Border
                            BorderThickness="2"
                            BorderBrush="#20FFFFFF"/>

                        <!--Value and body-->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!--Function value-->
                            <Canvas Background="#20000000"/>
                            <Viewbox 
                                StretchDirection="DownOnly"
                                Grid.Column="0"
                                Margin="12,0,12,0">
                                <TextBlock 
                                    Text="{x:Bind Value.ToString()}"
                                    FontSize="16"
                                    Foreground="LightGray"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"/>
                            </Viewbox>

                            <!--Function body-->
                            <Canvas
                                Background="#06FFFFFF"
                                Grid.Column="1"/>
                            <TextBlock
                                Grid.Column="1"
                                FontSize="16"
                                TextWrapping="Wrap"
                                Padding="12,8,12,12">
                                <Span attachedProperties:Brainf_ckInlineFormatterHelper.Source="{x:Bind Body}"/>
                            </TextBlock>
                        </Grid>

                        <!--Index-->
                        <TextBlock
                            Grid.Row="1"
                            Text="{x:Bind Index.ToString()}"
                            HorizontalAlignment="Center"
                            Foreground="#FFA0A0A0"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <controls:StaggeredPanel
                        RowSpacing="0"
                        ColumnSpacing="0"
                        DesiredColumnWidth="220"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>
    </DataTemplate>

    <!--Stack trace-->
    <DataTemplate
        x:Key="StackTraceTemplate"
        x:DataType="views:IdeResultWithSectionInfo">
        <RichTextBlock
            FontSize="16"
            TextWrapping="Wrap">
            <Paragraph attachedProperties:Brainf_ckInlineFormatterHelper.StackTrace="{x:Bind Result.HaltingInfo.StackTrace}"/>
        </RichTextBlock>
    </DataTemplate>

    <!--Memory state-->
    <DataTemplate
        x:Key="MemoryStateTemploate"
        x:DataType="views:IdeResultWithSectionInfo">
        <winui:ItemsRepeater
            ItemsSource="{x:Bind Result.MachineState}"
            HorizontalCacheLength="0"
            VerticalCacheLength="160">
            <winui:ItemsRepeater.ItemTemplate>
                <DataTemplate x:DataType="models:Brainf_ckMemoryCell">
                    <Grid RowSpacing="4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!--Outer border-->
                        <Border
                            BorderThickness="2"
                            BorderBrush="#20FFFFFF"/>

                        <!--Memory cell-->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!--Left value-->
                            <Canvas Background="#20000000"/>
                            <Viewbox 
                                StretchDirection="DownOnly"
                                Grid.Column="0"
                                Margin="12,0,12,0">
                                <TextBlock 
                                    Text="{x:Bind Value.ToString()}"
                                    FontSize="16"
                                    Foreground="LightGray"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"/>
                            </Viewbox>

                            <!--Right character-->
                            <Canvas 
                                Background="#06FFFFFF"
                                Grid.Column="1"/>
                            <Viewbox 
                                StretchDirection="DownOnly"
                                Grid.Column="1"
                                Margin="12,0,12,0">
                                <TextBlock
                                    Text="{x:Bind Character.ToString()}"
                                    FontSize="18"
                                    FontWeight="SemiBold"
                                    Foreground="#FFAE0909"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"/>
                            </Viewbox>
                        </Grid>

                        <!--Index-->
                        <TextBlock
                            Grid.Row="1"
                            Text="{x:Bind Index.ToString()}"
                            HorizontalAlignment="Center"
                            Foreground="{x:Bind convertersIde:BoolToForegroundBrushConverter.Convert(IsSelected)}"
                            FontWeight="{x:Bind convertersUI:BoolToFontWeightConverter.Convert(IsSelected)}"/>
                    </Grid>
                </DataTemplate>
            </winui:ItemsRepeater.ItemTemplate>
            <winui:ItemsRepeater.Layout>
                <winui:UniformGridLayout
                    Orientation="Horizontal"
                    MinItemWidth="80"
                    MinItemHeight="72"
                    MinColumnSpacing="8"
                    MinRowSpacing="8"
                    MaximumRowsOrColumns="5"
                    ItemsStretch="Fill"/>
            </winui:ItemsRepeater.Layout>
        </winui:ItemsRepeater>
    </DataTemplate>

    <!--Statistics-->
    <DataTemplate
        x:Key="StatisticsTemplate"
        x:DataType="views:IdeResultWithSectionInfo">
        <Grid HorizontalAlignment="Left">

            <!--Outer border-->
            <Border
                BorderThickness="2"
                BorderBrush="#20FFFFFF"/>

            <!--Info-->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!--Timestamp-->
                <Canvas Background="#20000000"/>
                <TextBlock
                    Padding="12"
                    Grid.Column="0"
                    FontSize="16"
                    Foreground="DarkCyan"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Text="{x:Bind Result.ElapsedTime.ToString()}"/>

                <!--Operators-->
                <Canvas
                    Background="#06FFFFFF"
                    Grid.Column="1"/>
                <TextBlock
                    Padding="32,12,32,12"
                    Grid.Column="1"
                    FontSize="16"
                    TextWrapping="Wrap"
                    FontWeight="SemiBold"
                    Foreground="#FFD0D0D0"
                    Text="{x:Bind converters:LocalizationConverter.Convert('IdeResults/Operators', Result.TotalOperations)}"/>
            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>
