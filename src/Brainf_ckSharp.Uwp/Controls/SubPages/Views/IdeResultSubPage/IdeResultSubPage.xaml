<UserControl
    x:Class="Brainf_ckSharp.Uwp.Controls.SubPages.Views.IdeResultSubPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:host="using:Brainf_ckSharp.Uwp.Controls.SubPages.Host"
    xmlns:jumpList="using:Brainf_ckSharp.Uwp.Controls.DataTemplates.JumpList"
    xmlns:templateSelectors="using:Brainf_ckSharp.Uwp.TemplateSelectors"
    xmlns:converters="using:Brainf_ckSharp.Uwp.Converters"
    xmlns:enums="using:Brainf_ckSharp.Shared.Enums"
    xmlns:views="using:Brainf_ckSharp.Uwp.Controls.SubPages.Views"
    xmlns:attachedProperties="using:Brainf_ckSharp.Uwp.AttachedProperties"
    xmlns:models="using:Brainf_ckSharp.Shared.Models.Ide.Views"
    xmlns:collections="using:CommunityToolkit.Mvvm.Collections"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <views:IdeResultSubPageTemplates/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{x:Bind ViewModel.LoadDataCommand}"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <!--Root-->
    <host:SubPageFrame
        x:Uid="IdeResults/Frame"
        Title="RUN"
        Background="#72000000">

        <!--Visual states for the buttons-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="ButtonsHiddenState">
                    <VisualState.Setters>
                        <Setter Target="ButtonsGrid.IsHitTestVisible" Value="False"/>
                    </VisualState.Setters>
                    <VisualState.Storyboard>
                        <Storyboard TargetName="ButtonsGrid">
                            <DoubleAnimation
                                Storyboard.TargetProperty="Height"
                                EnableDependentAnimation="True"
                                To="0"
                                Duration="0:0:0.5"/>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0:0:0.5"/>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
                <VisualState x:Name="ButtonsVisibleState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsAtBreakpoint, Mode=OneWay}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ButtonsGrid.IsHitTestVisible" Value="True"/>
                    </VisualState.Setters>
                    <VisualState.Storyboard>
                        <Storyboard TargetName="ButtonsGrid">
                            <DoubleAnimation
                                Storyboard.TargetProperty="Height"
                                EnableDependentAnimation="True"
                                To="56"
                                Duration="0:0:0.5"/>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0:0:0.5"/>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--Results content-->
        <Grid ui:UIElementExtensions.ClipToBounds="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!--Loading bar-->
            <muxc:ProgressBar
                VerticalAlignment="Top"
                Height="8"
                Background="Transparent"
                IsIndeterminate="{x:Bind converters:BoolConverter.Any(ViewModel.LoadDataCommand.IsRunning, ViewModel.ContinueCommand.IsRunning, ViewModel.SkipCommand.IsRunning), Mode=OneWay}"/>

            <!--Semantic zoom-->
            <SemanticZoom
                Grid.Row="0"
                attachedProperties:SemanticZoomHelper.Source="{x:Bind ViewModel.Source, Mode=OneWay}">
                <SemanticZoom.ZoomedInView>

                    <!--ZoomedInView-->
                    <ListView
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        IsItemClickEnabled="False"
                        SelectionMode="None">
                        <ListView.Resources>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Margin" Value="0,0,0,0"/>
                                <Setter Property="Padding" Value="12,16,12,16"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Background" Value="#FF171717"/>
                            </Style>
                        </ListView.Resources>
                        <ListView.GroupStyle>
                            <GroupStyle HeaderContainerStyle="{StaticResource ExpandedListViewHeaderItemStyle}">
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate x:DataType="collections:IReadOnlyObservableGroup">
                                        <jumpList:SemanticZoomZoomedInViewHeaderTemplate
                                            Title="{x:Bind converters:EnumConverter.Convert((enums:IdeResultSection)Key)}"
                                            Margin="0,-8,0,0"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>
                        <ListView.ItemTemplateSelector>
                            <templateSelectors:IdeResultSectionTemplateSelector
                                ExceptionTypeTemplate="{StaticResource ExceptionTypeTemplate}"
                                HaltingPositionTemplate="{StaticResource HaltingPositionTemplate}"
                                StdoutTemplate="{StaticResource StdoutTemplate}"
                                StackTraceTemplate="{StaticResource StackTraceTemplate}"
                                SourceCodeTemplate="{StaticResource SourceCodeTemplate}"
                                FunctionDefinitionsTemplate="{StaticResource FunctionDefinitionsTemploate}"
                                MemoryStateTemplate="{StaticResource MemoryStateTemploate}"
                                StatisticsTemplate="{StaticResource StatisticsTemplate}"/>
                        </ListView.ItemTemplateSelector>
                    </ListView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>

                    <!--ZoomedOutView-->
                    <ListView>
                        <ListView.Resources>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Margin" Value="0,0,0,4"/>
                                <Setter Property="Padding" Value="12,16,12,16"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Background" Value="#FF171717"/>
                            </Style>
                        </ListView.Resources>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="ICollectionViewGroup">
                                <jumpList:SemanticZoomZoomedOutViewHeaderTemplate
                                    Title="{x:Bind converters:EnumConverter.Convert((enums:IdeResultSection)Group.(collections:IReadOnlyObservableGroup.Key))}">
                                    <jumpList:SemanticZoomZoomedOutViewHeaderTemplate.DescriptionSpan>
                                        <Span attachedProperties:IdeResultSectionDescriptionHelper.Section="{x:Bind (models:IdeResultWithSectionInfo)GroupItems[0]}"/>
                                    </jumpList:SemanticZoomZoomedOutViewHeaderTemplate.DescriptionSpan>
                                </jumpList:SemanticZoomZoomedOutViewHeaderTemplate>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>

            <!--Breakpoints control buttons-->
            <Grid                    
                x:Name="ButtonsGrid"
                x:Load="False"
                ColumnSpacing="4"
                Height="0"
                Opacity="0"
                Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Shadow -->
                <ui:Effects.Shadow>
                    <media:AttachedCardShadow Color="Black" BlurRadius="12" />
                </ui:Effects.Shadow>

                <!--Continue-->
                <Button
                    Style="{StaticResource ExpandedSquareButtonRevealStyle}"
                    Background="#FF171717"
                    Command="{x:Bind ViewModel.ContinueCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Polygon 
                            Points="0,0 0,18.75 15,9.375" 
                            Stroke="DarkGreen" 
                            Fill="Green" 
                            VerticalAlignment="Center"/>
                        <TextBlock
                            Margin="12,0,0,0"
                            Text="Continue"/>
                    </StackPanel>
                </Button>

                <!--Skip-->
                <Button
                    Grid.Column="1"
                    Style="{StaticResource ExpandedSquareButtonRevealStyle}"
                    Background="#FF171717"
                    Command="{x:Bind ViewModel.SkipCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Polygon 
                            Points="0,0 0,18.75 12,9.375"
                            Stroke="DarkGreen"
                            Fill="#FF4F824C"/>
                        <Polygon
                            Points="0,0 0,18.75 12,9.375"
                            Stroke="DarkGreen"
                            Fill="#FF4F824C"/>
                        <TextBlock
                            Margin="12,0,0,0"
                            Text="Skip"/>
                    </StackPanel>
                </Button>
            </Grid>
        </Grid>
    </host:SubPageFrame>
</UserControl>
